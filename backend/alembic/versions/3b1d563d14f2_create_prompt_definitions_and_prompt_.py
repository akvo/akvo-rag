from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "3b1d563d14f2"
down_revision: Union[str, None] = "3580c0dcd005"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prompt_definitions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_prompt_definitions_id"),
        "prompt_definitions",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_prompt_definitions_name"),
        "prompt_definitions",
        ["name"],
        unique=True,
    )
    op.create_table(
        "prompt_versions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("prompt_definition_id", sa.Integer(), nullable=False),
        sa.Column("content", mysql.LONGTEXT(), nullable=False),
        sa.Column("version_number", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("activated_by_user_id", sa.Integer(), nullable=True),
        sa.Column("activation_reason", sa.String(length=512), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activated_by_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prompt_definition_id"],
            ["prompt_definitions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_prompt_versions_id"), "prompt_versions", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_prompt_versions_prompt_definition_id"),
        "prompt_versions",
        ["prompt_definition_id"],
        unique=False,
    )

    op.drop_index(op.f("ix_api_keys_name"), table_name="api_keys")
    op.drop_index(op.f("key"), table_name="api_keys")
    op.drop_index(
        op.f("ix_document_uploads_created_at"), table_name="document_uploads"
    )
    op.drop_index(
        op.f("ix_document_uploads_status"), table_name="document_uploads"
    )
    op.create_index(
        op.f("ix_document_uploads_id"),
        "document_uploads",
        ["id"],
        unique=False,
    )
    op.alter_column(
        "documents",
        "file_size",
        existing_type=mysql.INTEGER(),
        type_=sa.BigInteger(),
        nullable=False,
    )
    op.alter_column(
        "documents",
        "content_type",
        existing_type=mysql.VARCHAR(length=100),
        nullable=False,
    )
    op.alter_column(
        "documents",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "documents",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "knowledge_bases",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    op.alter_column(
        "knowledge_bases",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "knowledge_bases",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,  # Revert to original nullable=False
    )
    op.alter_column(
        "knowledge_bases",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,  # Revert to original nullable=False
    )
    op.alter_column(
        "documents",
        "updated_at",
        existing_type=mysql.DATETIME(),
        nullable=False,  # Revert to original nullable=False
    )
    op.alter_column(
        "documents",
        "created_at",
        existing_type=mysql.DATETIME(),
        nullable=False,  # Revert to original nullable=False
    )
    op.alter_column(
        "documents",
        "content_type",
        existing_type=mysql.VARCHAR(length=100),
        nullable=True,  # Revert to original nullable=True
    )
    op.alter_column(
        "documents",
        "file_size",
        existing_type=sa.BigInteger(),
        type_=mysql.INTEGER(),
        nullable=True,  # Revert to original nullable=True
    )

    op.drop_index(
        op.f("ix_document_uploads_id"), table_name="document_uploads"
    )

    op.create_index(
        op.f("ix_document_uploads_status"),
        "document_uploads",
        ["status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_document_uploads_created_at"),
        "document_uploads",
        ["created_at"],
        unique=False,
    )
    op.create_index(op.f("key"), "api_keys", ["key"], unique=True)
    op.create_index(
        op.f("ix_api_keys_name"), "api_keys", ["name"], unique=False
    )

    # REVERT PROMPT
    op.drop_constraint(
        "prompt_versions_ibfk_2",
        "prompt_versions",
        type_="foreignkey",
    )
    op.drop_index(
        op.f("ix_prompt_versions_prompt_definition_id"),
        table_name="prompt_versions",
    )
    op.drop_index(op.f("ix_prompt_versions_id"), table_name="prompt_versions")
    op.drop_table("prompt_versions")

    op.drop_index(
        op.f("ix_prompt_definitions_name"), table_name="prompt_definitions"
    )
    op.drop_index(
        op.f("ix_prompt_definitions_id"), table_name="prompt_definitions"
    )
    op.drop_table("prompt_definitions")
    # ### end Alembic commands ###
