services:
  nginx-dev:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    image: python:3.11-slim
    ports:
      - "${BACKEND_PORT}:8000"
    env_file:
      - .env
    environment:
      - DEBUG=1
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app:delegated
      - ./backend/uploads:/app/uploads
      - pip_cache:/app/.pip
    working_dir: /app
    networks:
      - app_network
    depends_on:
      - db
      - rabbitmq
    command: ["./entrypoint.sh"]
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_worker:
    image: python:3.11-slim
    env_file:
      - .env
    environment:
      - DEBUG=1
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
    working_dir: /app
    volumes:
      - ./backend:/app:delegated
      - pip_cache:/app/.pip
    depends_on:
      - rabbitmq
      - backend
    command: ["./entrypoint-celery.sh"]
    networks:
      - app_network
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  flower:
    image: mher/flower
    container_name: flower
    command: >
      celery --broker=amqp://rabbitmq:rabbitmq@rabbitmq:5672//
              --result-backend=rpc://
              flower --port=5555 --basic_auth=admin:admin
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # management console
    networks:
      - app_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:${NGINX_PORT}/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ragwebui
      - MYSQL_USER=ragwebui
      - MYSQL_PASSWORD=ragwebui
      - TZ=Asia/Shanghai
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

volumes:
  mysql_data:
  pip_cache:

networks:
  app_network:
    driver: bridge
