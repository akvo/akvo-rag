# Chat Provider, remember to set the api key / base url / model for the provider
CHAT_PROVIDER=openai

# OpenAI settings (required if CHAT_PROVIDER=openai)
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_MODEL=gpt-4

# Deepseek settings (required if CHAT_PROVIDER=deepseek)
DEEPSEEK_API_KEY=your-deepseek-api-key-here
DEEPSEEK_API_BASE=https://api.deepseek.com/v1
# Deepseek model could be deepseek-chat or deepseek-reasoner
DEEPSEEK_MODEL=deepseek-chat

# Ollama settings (required if CHAT_PROVIDER=ollama, in docker compose, use host.docker.internal instead of localhost)

# If you are using macOS with docker-compose, you can use host.docker.internal
OLLAMA_API_BASE=http://host.docker.internal:11434

# If you used a compiled installation, you can use http://localhost:11434
OLLAMA_API_BASE=http://localhost:11434
# If you are a Linux server using docker-compose, you need to use the host machine's IP address.
# OLLAMA_API_BASE=http://172.17.0.1:11434
OLLAMA_MODEL=deepseek-r1:7b

# DashScope settings (optional - required only if using DashScope)
DASH_SCOPE_API_KEY=

# MySQL settings (required)
MYSQL_SERVER=db
MYSQL_PORT=3306
MYSQL_USER=ragwebui
MYSQL_PASSWORD=ragwebui
MYSQL_DATABASE=ragwebui

# JWT settings (required)
SECRET_KEY=your-secret-key-here
ACCESS_TOKEN_EXPIRE_MINUTES=10080

# Timezone settings (optional)
TZ=Asia/Shanghai

# CUSTOM DEV ENV
NGINX_PORT=80
BACKEND_PORT=8000
DB_PORT=3306

# RABBITMQ CONFIGURATION
RABBITMQ_USER=rabbitmq
RABBITMQ_PASS=rabbitmq
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672

# FLOWER CONFIGURATION
FLOWER_USER=admin
FLOWER_PASSWORD=admin
FLOWER_PORT=5555

# MCP Servers config
KNOWLEDGE_BASES_MCP=https://api.knowledge.example.com/mcp/
KNOWLEDGE_BASES_API_KEY=supersecretapikey
KNOWLEDGE_BASES_API_ENDPOINT=https://api.knowledge.example.com